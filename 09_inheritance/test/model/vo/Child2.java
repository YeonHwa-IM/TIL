package com.kh.example.test.model.vo;

public class Child2 extends Parent{
	//		자식2 는     상속받는다   부모를    컨트롤스테이스하면 부모의 멤버가 보인다.
	
	private String str; // 멤버 생성 
	
	public void setStr(String str) { //
		this.str = str;
	}
	public String getStr() {
		return str;
	}
	 public Child2() {//같은 패키지,parent상속을 받음
//		 super.num = 10; 
		 //접근범위가 Parent만이기 때문에 불가능
		 
		 super.dNum = 10.2; 
		 //접근범위가 같은 패키지이기 때문에 가능
		 
		 super.bool = false;
		 //접근범위가 같은 패키지, 후손이기 때문에 가능
		 
		 super.ch ='a';
		 //접근범위가 전체 다 이기 때문에 가능
	 }
}
//객체가 생성되자마다 this에 주소값이 들어가서  대상이 나 
//this의 대상이 나였다면 suprt는 대상이 부모이다. 부모의 생성자를 불러온다. 
//super의 레퍼런스는 
//디스와 디스 래퍼선스 생성자는 대상이 나이고, 
/*this :  할당된 객체를 가리키고 있다.
매개변수(메소드) 안에서 필드명과 매개변수명을 같이 사용하고 싶을때,
지역변수가 우선순위여서 아무효과가 없을때 
매개변수화 필드의 이름을 다르게 쓰기위해서 사용!!

디스는 나 자신을 말한다.

생성자안에도 this 있음.
모든 인스턴스 메소드에 숨겨진 채 존재하는 레퍼런스로 할당된 객체를 가리킴
함수 실행 시 전달되는 객체의 주소를 자동으로 받음

객체가 생성되는 순간 주소값이 this안에 들어있다.

디스는 디스라는 객체를 한번도 만들지 않았지만, 숨겨져있었다.
디스라고하는 변수에도 주소값이 자동으로 담긴다.
디스는 객체, 나 자신이다. **디스 = 방금 만들어진 객체 나 자신

"레퍼런스" 는 참조라는 뜻으로,( 주소값을 가지고 있는것을 참조형 자료형이라고 부른다.)
클래스를 통해서 만들어진 변수를 레퍼런스를 뜻한다.
레퍼런스 변수라고 한다.  ex) u1

**용어 외워야 안헷갈린다....

디스 생성자.
생성자, 같은 클래스의 다른 생성자를 호출할 때 사용하며 반드시 첫 줄에 선언
나 자신의 생성자.*/